@charset "utf-8";

/********** 全体設定 ************/
html {
	font-size:14px;
	scroll-behavior:smooth;
}

body {
	line-height:1.5; /* ←行間 */
	font-family:'Arial','メイリオ','Meiryo',sans-serif;
	background-color: #fafafa;
	background-image: url(../img/bg.png);
	/* ↑ショートハンドで書く場合は background:#fafafa url(); */

	/* header固定で潜り込んだ要素を押し出す */
	/* →固定にpositionを使うとfloatのような現象が起きて次の要素が潜り込むため */
	padding-top:60px;
}

/********** a要素の基本設定 ************/
a {
	color:#76a3be;
	text-decoration:none;
}

a:hover {
	color:#000;
}

/********** 画像の隙間対策 ************/
img {
	vertical-align:bottom;
}

/********** header ************/

/* 横並び display:flex; */
/* 横均等配置	justify-content:space-between; */
/* 縦中央配置 align-items:center; */
/* 横幅 width:960px; */
/* 要素横中央配置 margin:0 auto; */
/* 背景色 #ededed */
/* h1とnavを横並びかつliを横並び  */

header {
	background-color:#ededed;
	/* 要素の固定 */
	position:fixed;
	width:100%;
	top:0;
	left:0;
	/* 他の要素より上層に表示するおまじない（※position使ってないと効かないので注意） */
	z-index:9999;
}

.inner,nav ul { /* 同じプロパティを使うときはカンマ区切りでセレクタ同時指定 */
	display:flex;
	justify-content:space-between;
	align-items:center;
}

.inner {
	width:960px;
	margin:0 auto;
}

/* innerというクラス名を後で他の箇所にも使い回したい
	→高さの情報が邪魔になるため、heightのみ別で記述 */
header .inner {
	height:60px;
}

nav ul li {
	margin-left:30px;
}


/********** メインビジュアル ************/
.mv {
	background-image:url(../img/bigbanner.jpg);
	background-repeat:no-repeat;
	background-position:center;
	background-size:cover;
	height:500px;
	display:flex;
	justify-content:center;
	align-items:center;
}


/********** main上段（メインコンテンツ） ************/

/* 横並びで中央配置のスタイルを使い回す→並べたい親divにinnerと名付ける */
main .inner {
	padding:40px 15px;
}

main .inner > div { /* 保険として“直下のdiv”を大なりで指定 */
	text-align:center;
	width:280px;
	padding:0 20px;
}


/********** アイコン ************/

/* 手段① .inner div[class^="service"] dl dt {}  属性指定[]+前方一致^ */

/* 手段② 他のクラス名をつける（半角スペース区切りで複数クラス名） */
.service dl dt,h2 {

	/* 文字の太さ 100～900 normalは400 */
	/* lighter、bold、bolderがある（boldは700） */
	font-weight:bold;

	/* marginのショートハンド復習 */
	/* 値1つ→上下左右、値2つ→上下 左右 */
	/* 値3つ→上 左右 下、値4つ→上 右 下 左 */
	margin:20px 0 10px;
}

.service dl dt span, /* 複数セレクタはカンマの直後に改行OK */
.news span,
.staff span,
.contact span {
	font-size:150%; /* 1.5em */
	/* 文字間隔 カーニング（文字と文字の間） */
	letter-spacing:3px;
}


.service_plan span {
	color:#f4b1d3;
}

.service_design span {
	color:#b2c8fd;
}

.service_operate span {
	color:#b5dea0;
}



@keyframes flash {
	0% {
		opacity:1;
	}

	50% {
		transform:rotate(10deg);
		opacity:0.5;
	}

	100% {
		opacity:1;
    }
  }

.service img:hover {
		animation:flash 0.8s linear infinite;
	}




/********** ボタンの基本設定 ************/
.btn {
	/* 横並びでありブロックレベル要素のスタイルが使える */
	/* ※ a要素は本来インライン要素なのでmarginやpaddingが効かないが、
		 	inline-blockを指定するとブロック要素になるためそれらが使える */
	display:inline-block;
	 /* background-color:blue; */
	padding:1em 2em; /* 1em→16px、2em→32px */
	color:#fff;
	margin-top:10px;
	border-radius:10px;
}

.service_plan .btn {
	background-color:#f4b1d3;
}

.service_design .btn {
	background-color:#b2c8fd;
}

.service_operate .btn {
	background-color:#b5dea0;
}


.btn:hover {
	transform:translate(-2px,-2px);
	box-shadow: 3px 3px 8px rgba(150,150,150,0.6);
}

/********** main下段（news、staff共通） ************/
main .inner section {
	width:460px;
	/* 親要素の垂直方向中央を上書き */
	align-self:flex-start;
}

/********** news ************/
.news ul li {
	/* list-style-type→マークの種類 *//* ←いつも使うが実はショートハンド */
	/* list-style-image→マークに画像を指定 */
	/* list-style-position→マークの位置 */
	list-style-type:circle;
	margin-left:1.5em; /* 見出しより左にはみ出ないようにする */
	margin-bottom:0.7em; /* 要素同士を少し離す */

	/* 折り返し揃え（＝要素縦割り）にはflexを使用 */
	display:flex;
}

.news ul li time {
	width:120px;
}

.news ul li a {
	width:320px;
}

/********** staff ************/

.staff figure img {
	float:right;
	margin:0 0 15px 15px;
}

.staff dl dt {
	font-size:16px;
	font-weight:bold;
	margin:14px 0 16.8px 0;
}

.staff .btn {
	background-color:#303030;
	margin-top:20px;
}

.staff p {
	text-align:right;
}


/********** お問い合わせ ************/
.contact {
	text-align:center;
	background-color:#fff;
	padding:2em 0;
}


.contact img {
	margin-bottom:10px;
	width:50px;
}

@keyframes pyon {
	0% {
		opacity:1;
	}

	25% {
		transform:translate(0,5px);
		opacity:0.5;
	}

	50% {
		transform:translate(0,-5px);
		opacity:1;
	}

	75% {
		transform:translate(0,5px);
		opacity:0.5;
	}

	100% {
		transform:translate(0,-5px);
		opacity:1;
    }
  }


.contact img:hover{
	animation:pyon 1.5s ease-in-out infinite;
}

/* .contact p:nth-child(3) */
.contact p:first-of-type { /* pが複数あるのでnth系で指定 */
	margin-bottom:18px;
	font-size:130%;
	font-weight:bold;
	color:#de7897;
}

.contact .btn {
	background-color:#b085d6;
}


/********** footer ************/
footer {
	padding:15px 0;
	background-color:#555;
}

footer p {
	font-size:85%;
	text-align:center;
	color:#b0b0b0;
}








/**********  ************/
/**********  ************/
/**********  ************/
/**********  ************/

